(function(){var c,h=function(){var a=function(a){return Object.prototype.toString.call(a)==="[object Array]"},b=function(i,j,d){if(a(i)){d=Array(i.length);for(var e=0,f=i.length;e<f;e++)d[e]=j(i[e]);return d}else{e=d?j:null;d=d||j;j={};for(f in i)if(i.hasOwnProperty(f)){var b=i[f],c=e?e(f):f;b=d?d(b):b;j[c]=b}return j}},c=function(a){var b=0;a=a.split(".");for(var d=0;d<3;d++)b*=100,d<a.length&&(b+=parseInt(a[d],10));return b},k=function(b,c){if(!a(c)){for(var d=Array(arguments.length-1),e=1;e<arguments.length;e++)d[e-
1]=arguments[e];return k(b,d)}return b.replace(/\{{1,2}\d+\}{1,2}/g,function(a){if(a.indexOf("{{")==0&&a.indexOf("}}")==a.length-2)return a.substring(1,a.length-1);for(var b=0;a[b]=="{";)b++;for(var d=a.length-1;a[d]=="}";)d--;b=parseInt(a.substring(b,d+1),10);return a.replace("{"+b+"}",c[b])})};return{isArray:a,each:function(b,c){if(a(b))for(var d=0,e=b.length;d<e;d++){var f=c.length===1?c(b[d]):c(d,b[d]);if(f!==void 0)return f}else for(d in b)if(b.hasOwnProperty(d)&&(f=c.length===1?c(b[d]):c(d,
b[d]),f!==void 0))return f},isEmpty:function(b){if(a(b))return b.length===0;return!h.each(b,function(){return!0})},map:b,clone:function(a){return b(a)},v2n:c,testVersion:function(a,b){var d=a.substring(1),e=d.split(".");e[e.length-1]="0";e[e.length-2]=(parseInt(e[e.length-2],10)+1).toString();e=e.join(".");var f=c(b);return c(d)<=f&&f<c(e)},format:k,once:function(a){var b=!1;return function(){b||(a.apply(this,arguments),b=!0)}}}}(),g={ALL:0,TRACE:1,DEBUG:2,INFO:3,WARN:4,ERROR:5,OFF:100},m=function(){this.level=
g.DEBUG};m.prototype={log:function(a,b){if(this.level<=a)try{console.log(b)}catch(c){}},trace:function(a){this.log(g.TRACE,a)},debug:function(a){this.log(g.DEBUG,a)},info:function(a){this.log(g.INFO,a)},warn:function(a){this.log(g.WARN,a)},error:function(a){this.log(g.ERROR,a)}};var l=function(a){var b=c.modules[a.name];b&&b.version!=a.version&&c.logger.warn(h.format('The module "{0}" with version "{1}" has already been initialized, skip version "{2}".',a.name,b.version,a.version));r(a);a.init();
b={};b.name=a.name;b.version=a.version;if(a.autoloads)b.autoloads=a.autoloads;if(a.dependencies)b.dependencies=a.dependencies;c.modules[a.name]=b},r=function(a){h.each(a.dependencies||[],function(a,g){var k=c.modules[a];if(!k)throw Error(h.format('Missing required module: "{0}" (expected version: "{1}").',a,g));if(!h.testVersion(g,k.version))throw Error(h.format('Version of module "{0}" mismatched, expected: "{1}", actual: "{2}".',a,g,k.version));})},o=!!(typeof require==="function"&&typeof module!==
"undefined"&&module.exports),p=!!(typeof require==="function"&&typeof define==="function"&&define.amd),s=function(a){var b=a.autoloads||[];if(o){var c=a.require;h.each(b,function(a){try{c("./wind-"+a)}catch(b){c("wind-"+a)}});l(a)}else p?(b=h.map(b,function(a){return"wind-"+a}),define("wind-"+a.name,b,function(){if(a.onerror)try{l(a)}catch(b){a.onerror(b)}else l(a)})):l(a)},n=function(){c.logger=new m;c.Logging={Logger:m,Level:g};c._=h;c.modules={core:{name:"core",version:"0.7.0"}};c.binders={};c.builders=
{};c.define=s};if(o)c=module.exports,n();else if(p)define("wind-core",function(){c={};n();return c});else{var q=Function("return this")();if(q.Wind)throw Error("There's already a Wind root here, please load the component only once.");c=q.Wind={};n()}})();
