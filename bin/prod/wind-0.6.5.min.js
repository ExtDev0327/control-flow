(function(){var c,d=function(){var a=function(a){return Object.prototype.toString.call(a)==="[object Array]"},b=function(a){var b=0;a=a.split(".");for(var e=0;e<3;e++)b*=100,e<a.length&&(b+=parseInt(a[e],10));return b},c=function(b,j){if(!a(j)){for(var e=Array(arguments.length-1),f=1;f<arguments.length;f++)e[f-1]=arguments[f];return c(b,e)}return b.replace(/\{{1,2}\d+\}{1,2}/g,function(a){if(a.indexOf("{{")==0&&a.indexOf("}}")==a.length-2)return a.substring(1,a.length-1);for(var b=0;a[b]=="{";)b++;
for(var i=a.length-1;a[i]=="}";)i--;b=parseInt(a.substring(b,i+1),10);return a.replace("{"+b+"}",j[b])})};return{isArray:a,each:function(b,j){if(a(b))for(var e=0,f=b.length;e<f;e++){var c=j(e,b[e]);if(c!==void 0)return c}else for(e in b)if(b.hasOwnProperty(e)&&(c=j(e,b[e]),c!==void 0))return c},map:function(b,c,e){if(a(b)){e=Array(b.length);for(var f=0,d=b.length;f<d;f++)e[f]=c(b[f]);return e}else{f={};for(d in b)if(b.hasOwnProperty(d)){var h=b[d],g=c?c(d):d;h=e?e(h):h;f[g]=h}return f}},v2n:b,testVersion:function(a,
c){var e=a.substring(1),f=e.split(".");f[f.length-1]="0";f[f.length-2]=(parseInt(f[f.length-2],10)+1).toString();f=f.join(".");var d=b(c);return b(e)<=d&&d<b(f)},format:c,once:function(a){var b=!1;return function(){b||(a.apply(this,arguments),b=!0)}}}}(),g={ALL:0,TRACE:1,DEBUG:2,INFO:3,WARN:4,ERROR:5,OFF:100},k=function(){this.level=g.DEBUG};k.prototype={log:function(a,b){if(this.level<=a)try{console.log(b)}catch(c){}},trace:function(a){this.log(g.TRACE,a)},debug:function(a){this.log(g.DEBUG,a)},
info:function(a){this.log(g.INFO,a)},warn:function(a){this.log(g.WARN,a)},error:function(a){this.log(g.ERROR,a)}};var o=function(a,b){a?d.each(b,function(b,c){var d;try{d=a("./wind-"+c)}catch(e){d=a("wind-"+c)}d.init()}):d.each(b,function(a,b){b.init()})},m=function(a){var b=c.modules[a.name];b&&b.version!=a.version&&c.logger.warn(d.format('The module "{0}" with version "{1}" has already been initialized, skip version "{2}".',a.name,b.version,a.version));s(a);a.init();b={};l(b,a);c.modules[a.name]=
b},s=function(a){if(a.coreDependency&&!d.testVersion(a.coreDependency,c.coreVersion))throw Error(d.format('Version of core component mismatched, expected: "{0}", actual: "{1}".',a.coreDependency,c.coreVersion));d.each(a.dependencies||[],function(a,h){var i=c.modules[a];if(!i)throw Error(d.format('Missing required module: "{0}" (expected version: "{1}").',a,h));if(!d.testVersion(h,i.version))throw Error(d.format('Version of module "{0}" mismatched, expected: "{1}", actual: "{2}".',a,h,i.version));
})},l=function(a,b){a.name=b.name;a.version=b.version;if(b.autoloads)a.autoloads=b.autoloads;if(b.coreDependency)a.coreDependency=b.coreDependency;if(b.dependencies)a.dependencies=b.dependencies},p=!!(typeof require==="function"&&typeof module!=="undefined"&&module.exports),q=!!(typeof require==="function"&&typeof define==="function"&&define.amd),t=function(a){var b=a.autoloads||[];if(p)l(a.exports,a),a.exports.init=d.once(function(){o(a.require,b);m(a)});else if(q){var c=d.map(b,function(a){return"wind-"+
a});define("wind-"+a.name,c,function(){var b=arguments,c={};l(c,a);c.init=d.once(function(){o(null,b);m(a)});return c})}else m(a)},n=function(){c.coreVersion="0.6.5";c.logger=new k;c.Logging={Logger:k,Level:g};c._=d;c.modules={};c.binders={};c.builders={};c.define=t};if(p)c=module.exports,n();else if(q)define("wind",function(){c={};n();return c});else{var r=Function("return this")();if(r.Wind)throw Error("There's already a Wind root here, please load the component only once.");c=r.Wind={};n()}})();
