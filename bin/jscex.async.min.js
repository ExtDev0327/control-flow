Jscex.Async=function(){var e=function(){},g=function(){};g.prototype={register:function(a){this.isCancellationRequested&&a();if(!this._handlers)this._handlers=[];this._handlers.push(a)},cancel:function(){if(!this.isCancellationRequested){this.isCancellationRequested=!0;var a=this._handlers;delete this._handlers;for(var b=0;b<a.length;b++)try{a[b]()}catch(c){Jscex.log("Cancellation handler threw an error: "+c)}}},throwIfCancellationRequested:function(){if(this.isCancellationRequested)throw new e;}};
var i=0,d=function(a){this.id=++i;this._delegate=a;this._listeners=[];this.status="ready"};d.prototype={start:function(){if(this.status!="ready")throw Error('Task can only be started in "ready" status.');var a=this;this.status="running";this._delegate.onStart(function(b,c){if(a.status!="running")throw Error('Callback can only be used in "running" status.');if(b=="success")a.result=c,a.status="succeeded";else if(b=="failure")a.error=c,a.status=c instanceof e?"canceled":"failed";else throw Error("Unsupported type: "+
b);a._notify()})},_notify:function(){var a=this._listeners;delete this._listeners;for(var b=0;b<a.length;b++)try{a[b](this)}catch(c){Jscex.log("Task listener threw an error: "+c)}},addListener:function(a){if(!this._listeners)throw Error('Listeners can only be added in "ready" or "running" status.');this._listeners.push(a)},removeListener:function(a){if(!this._listeners)throw Error('Listeners can only be removed in "ready" or "running" status.');a=this._listeners.indexOf(a);a>0&&this._listeners.splice(a,
1)}};var f=function(){};f.prototype={binder:"$await",Start:function(a,b){return new d({onStart:function(c){b.next(a,function(a,b){if(a=="normal"||a=="return")c("success",b);else if(a=="throw")c("failure",b);else throw Error("Unsupported type: "+a);})}})},Bind:function(a,b){return{next:function(c,e){var d=function(a){if(a.error)e("throw",a.error);else{var d;try{d=b.call(c,a.result)}catch(f){e("throw",f);return}d.next(c,e)}};a.status=="ready"?(a.addListener(d),a.start()):a.status=="running"?a.addListener(d):
d(a)}}}};for(var h in Jscex.builderBase)f.prototype[h]=Jscex.builderBase[h];return{CancellationToken:g,CanceledError:e,Task:d,Builder:f}}();Jscex.builders.async=new Jscex.Async.Builder;
